// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should hide edit and tenants in source items if there are not tenants available 1`] = `
Object {
  "actions": Array [
    Object {
      "action": [Function],
      "icon": <ForwardRef(TrashCan) />,
      "text": "Remove",
    },
  ],
  "className": "process",
  "entityType": "process",
  "icon": <ForwardRef(TableSplit) />,
  "id": "process:defKey1",
  "meta": Array [
    false,
  ],
  "name": "definition 1",
  "type": "Process",
}
`;

exports[`should match snapshot 1`] = `
<div
  className="SourcesList"
>
  <EntityList
    action={
      <Button
        kind="primary"
        onClick={[Function]}
      >
        Add
      </Button>
    }
    bulkActions={
      Array [
        <BulkDeleter
          checkConflicts={[Function]}
          conflictMessage="Removing data sources deletes all associated reports and their alerts."
          deleteEntities={[Function]}
          type="remove"
        />,
      ]
    }
    emptyStateComponent={
      <EmptyState
        actions={
          <Button
            kind="primary"
            onClick={[Function]}
            size="md"
          >
            Add
          </Button>
        }
        description="You can add one or more sources to the collection"
        icon={<ForwardRef(Db2Database) />}
        title="There are no sources added yet"
      />
    }
    headers={
      Array [
        "Definition name",
        "Tenants",
      ]
    }
    isLoading={false}
    onChange={[Function]}
    rows={
      Array [
        Object {
          "actions": Array [
            Object {
              "action": [Function],
              "icon": <ForwardRef(Edit) />,
              "text": "Edit",
            },
          ],
          "className": "process",
          "entityType": "process",
          "icon": <ForwardRef(TableSplit) />,
          "id": "process:defKey",
          "meta": Array [
            "Not defined, Sales, (Unauthorized tenant)",
          ],
          "name": "definition name",
          "type": "Process",
        },
        Object {
          "actions": Array [
            Object {
              "action": [Function],
              "icon": <ForwardRef(Edit) />,
              "text": "Edit",
            },
            Object {
              "action": [Function],
              "icon": <ForwardRef(TrashCan) />,
              "text": "Remove",
            },
          ],
          "className": "process",
          "entityType": "process",
          "icon": <ForwardRef(TableSplit) />,
          "id": "process:defKey1",
          "meta": Array [
            "Sales",
          ],
          "name": "definition 1",
          "type": "Process",
        },
      ]
    }
  />
  <Deleter
    checkConflicts={[Function]}
    deleteEntity={[Function]}
    deleteText="Remove Data source"
    descriptionText="The '' data source will be removed from the collection."
    entity={null}
    getName={[Function]}
    onClose={[Function]}
    onDelete={[Function]}
    type="source"
  />
  <Modal
    className="saveModal"
    onClose={[Function]}
    open={null}
  >
    <ForwardRef(ModalHeader)
      title="Destructive changes"
    />
    <ForwardRef />
    <ForwardRef(ModalFooter)>
      <Button
        className="close"
        disabled={false}
        kind="secondary"
        onClick={[Function]}
      >
        Don't save
      </Button>
      <Button
        className="confirm"
        disabled={false}
        onClick={[Function]}
      >
        Save changes
      </Button>
    </ForwardRef(ModalFooter)>
  </Modal>
</div>
`;
