<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under
  ~ one or more contributor license agreements. See the NOTICE file distributed
  ~ with this work for additional information regarding copyright ownership.
  ~ Licensed under the Camunda License 1.0. You may not use this file
  ~ except in compliance with the Camunda License 1.0.
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.camunda.db.rdbms.sql.Commons">

  <!-- <include refid="io.camunda.db.rdbms.sql.Commons"/> -->
  <sql id="operationCondition">
    <choose>
      <when test="operation.operator.name().equals('EQUALS')">
        = #{operation.value}
      </when>
      <when test="operation.operator.name().equals('NOT_EQUALS')">
        != #{operation.value}
      </when>
      <when test="operation.operator.name().equals('EXISTS')">
        IS NOT NULL
      </when>
      <when test="operation.operator.name().equals('NOT_EXISTS')">
        IS NULL
      </when>
      <when test="operation.operator.name().equals('GREATER_THAN')">
        &gt; #{operation.value}
      </when>
      <when test="operation.operator.name().equals('GREATER_THAN_EQUALS')">
        &gt;= #{operation.value}
      </when>
      <when test="operation.operator.name().equals('LOWER_THAN')">
        &lt; #{operation.value}
      </when>
      <when test="operation.operator.name().equals('LOWER_THAN_EQUALS')">
        &lt;= #{operation.value}
      </when>
      <when test="operation.operator.name().equals('IN')">
        IN <foreach collection="operation.values" item="value" open="(" separator=", " close=")">#{value}</foreach>
      </when>
      <when test="operation.operator.name().equals('LIKE')">
        LIKE #{operation.value}
      </when>
    </choose>
  </sql>

  <sql id="keySetPageFilter">
    <if test="page != null and page.keySetPagination != null and !page.keySetPagination.isEmpty()">
      WHERE
      <foreach collection="page.keySetPagination" item="keySet" open="(" separator=" OR "
        close=")">
        <foreach collection="keySet.entries" item="entry" open="(" separator=" AND "
          close=")">
            ${entry.fieldName} ${entry.operator.symbol} #{entry.fieldValue}
        </foreach>
      </foreach>
    </if>
  </sql>

  <sql id="orderBy">
    <if test="sort != null and sort.orderings != null and !sort.orderings.isEmpty()">
      <foreach collection="sort.orderings" open="ORDER BY " separator=", " item="item">
        ${item.column} ${item.order}
      </foreach>
    </if>
  </sql>

  <sql id="paging">
    <if test="page != null">
      <if test="page.keySetPagination == null or page.keySetPagination.isEmpty()">
        ${paging.after}
      </if>
      <if test="page.keySetPagination != null and !page.keySetPagination.isEmpty()">
        ${keysetPaging.limit}
      </if>
    </if>
  </sql>

  <sql id="variableOperationCondition">
    <choose>
      <when test="operation.operator.name().equals('EQUALS')">
        <if test="operation.type.toString == 'STRING' or operation.type.toString == 'BOOLEAN'">
          VAR_VALUE = #{operation.value}
        </if>
        <if test="operation.type.toString == 'LONG'">
          LONG_VALUE = #{operation.value}
        </if>
        <if test="operation.type.toString == 'DOUBLE'">
          DOUBLE_VALUE = #{operation.value}
        </if>
      </when>
      <when test="operation.operator.name().equals('NOT_EQUALS')">
        <if test="operation.type.toString == 'STRING' or operation.type.toString == 'BOOLEAN'">
          VAR_VALUE != #{operation.value}
        </if>
        <if test="operation.type.toString == 'LONG'">
          LONG_VALUE != #{operation.value}
        </if>
        <if test="operation.type.toString == 'DOUBLE'">
          DOUBLE_VALUE != #{operation.value}
        </if>
      </when>
      <when test="operation.operator.name().equals('GREATER_THAN')">
        <if test="operation.type.toString == 'LONG'">
          LONG_VALUE &gt; #{operation.value}
        </if>
        <if test="operation.type.toString == 'DOUBLE'">
          DOUBLE_VALUE &gt; #{operation.value}
        </if>
      </when>
      <when test="operation.operator.name().equals('GREATER_THAN_EQUALS')">
        <if test="operation.type.toString == 'LONG'">
          LONG_VALUE &gt;= #{operation.value}
        </if>
        <if test="operation.type.toString == 'DOUBLE'">
          DOUBLE_VALUE &gt;= #{operation.value}
        </if>
      </when>
      <when test="operation.operator.name().equals('LOWER_THAN')">
        <if test="operation.type.toString == 'LONG'">
          LONG_VALUE &lt; #{operation.value}
        </if>
        <if test="operation.type.toString == 'DOUBLE'">
          DOUBLE_VALUE &lt; #{operation.value}
        </if>
      </when>
      <when test="operation.operator.name().equals('LOWER_THAN_EQUALS')">
        <if test="operation.type.toString == 'LONG'">
          LONG_VALUE &lt;= #{operation.value}
        </if>
        <if test="operation.type.toString == 'DOUBLE'">
          DOUBLE_VALUE &lt;= #{operation.value}
        </if>
      </when>
      <when test="operation.operator.name().equals('IN')">
        <if test="operation.type.toString == 'STRING'">
          VAR_VALUE IN
        </if>
        <if test="operation.type.toString == 'LONG'">
          LONG_VALUE IN
        </if>
        <if test="operation.type.toString == 'DOUBLE'">
          DOUBLE_VALUE IN
        </if>
        <foreach collection="operation.values" item="value" open="(" separator=", " close=")">
          #{value}
        </foreach>
      </when>
      <when test="operation.operator.name().equals('LIKE')">
        VAR_VALUE LIKE #{operation.value, typeHandler=io.camunda.db.rdbms.sql.typehandler.WildcardTransformingStringTypeHandler}
        OR VAR_FULL_VALUE LIKE #{operation.value, typeHandler=io.camunda.db.rdbms.sql.typehandler.WildcardTransformingStringTypeHandler}
      </when>
    </choose>
  </sql>

</mapper>
